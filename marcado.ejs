
		<!-- Header Back -->
		<div class="header-back header-back-simple header-back-small">
			<div class="header-back-container">
				<div class="container">
					<div class="row">
						<div class="col-md-12">
							<!-- Page Info -->
							<div class="page-info page-info-simple">
								<h1 class="page-title">Marcado HTML5</h1>
								<h2 class="page-description">Sintaxis.</h2>
							</div>
							<!-- End Page Info -->
						</div>
					</div>
				</div>
			</div>
		</div>
		<!-- End of Header Back -->
        <!-- yield -->
        
        
        
        
        
        
        
        
        
		<div id="content">
			<div class="container">
				<div class="row">
					<div class="col-md-12">
                        
                        
                        
                        
                        
                        
                        
                        
								<!-- Table of content -->
								<div class="table-of-contents">
									<ol>
										<li>
											<a href="#" class="js-scroll-to" data-target="#diseno-web">Diseño Web</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#navegadores">Navegadores</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#marcado-html">Marcado HTML</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#html5">HTML5</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#html-head-body">Elementos html, head y body</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#mayusculas-y-minusculas">Mayúsculas y minúsculas</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#comillas">Comillas</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#apertura">Elementos con una única etiqueta de apertura</a>
											<ol>
												<li>
													<a href="#" class="js-scroll-to" data-target="#No-es-necesario-indicar-cierre">No es necesario indicar cierre</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#Los-elementos-con-etiquetas-de-cierre-facultativa">Los elementos con etiquetas de cierre facultativa</a>
												</li>
											</ol>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#atributos-boleanos">Atributos boleanos</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#sintaxis-recomendada">Sintaxis recomendada</a>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#etiquetas-de-estructura-de-un-documento-HTML5">Etiquetas de estructura de un documento HTML5</a>
											<ol>
												<li>
													<a href="#" class="js-scroll-to" data-target="#doctype-html">&lt;!DOCTYPE html&gt;</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#html">&lt;html&gt;</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#head">&lt;head&gt;</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#body">&lt;body&gt;</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#meta">&lt;meta&gt;</a>
												</li>
											</ol>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#la-etiqueta-meta-viewport">La etiqueta meta viewport</a>
											<ol>
												<li>
													<a href="#" class="js-scroll-to" data-target="#tamaño-de-las-pantallas-de-los-móviles">Tamaño de las pantallas de los móviles</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#el-concepto-viewport">El concepto viewport</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#sintaxis-y-propiedades">Sintaxis y propiedades</a>
												</li>
												<li>
													<a href="#" class="js-scroll-to" data-target="#shrink-to-fit">shrink-to-fit=no</a>
												</li>
											</ol>
										</li>
										<li>
											<a href="#" class="js-scroll-to" data-target="#elementos-de-bloque-y-en-linea">Elementos de bloque y en línea</a>
										</li>
										
										
									</ol>
								</div>
                        
                        
                        
                        
                        
                        
                        
                        
                        
     
     
     
     
     
     

                                               
          <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="diseno-web">Diseño Web
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">El diseño web engloba todos los conocimientos y habilidades para adquirir las competencias necesarias para el diseño, desarrollo, implementación y mantenimiento de un sitio web.</h4>
         
         <p>El diseño web ha evolucionado a una velocidad exponencial teniendo que adapatarse rápidamente a la forma en que los usuarios consumen los contenidos a través de internet.</p>
          <p>Hace ya mucho tiempo que se ha dejado atrás esa etapa oscura en la que se maquetaba con tablas y en que solo existían Dreamwever y FrontPage para hacer las webs. (Frontpage es a día de hoy SharePoint Designer y es la única herramienta de desarrollo de SharePoint que virtualiza un sitio de SharePoint).</p>
          <p>Además ahora los usuarios además de consumir contenido generan el contenido.</p>
          <p>Otro <strong>dato</strong> a tener en cuenta es que estos contenidos, junto con el perfil del que los genera, su ubicación, la interacción que provocan aportan una <strong>información que tiene mucho valor</strong>, principalmente para el análisis de mercados de negocios.</p>
          <p>El acceso mayoritario a los contendios de Internet es a través del movil.</p>
          <P>Esto está cambiando los modelos de negocio, incluso fuerza a que los espacios de ocio y de transporte tengan que proporcionar WIFI a sus clientes porque estos así lo demandan.</p>
          
          <p>Antes se buscaba en el diseño web un diseño elegante que encajase con la identidad corporativa y que fuera sencillo de mantener.</p>
          
          <p>Ahora la prioridad es que la página web <strong>responda y forme parte del objetivo de negocio de la empresa.</strong></p>
          
          <p>Los criterios a estudiar antes de decantarse por un diseño web pueden ser:</p>
      
       
       <ul>
           <li>Cumplir los <strong>objetivos de negocio</strong> de la página Web.</li>
           <li>El SEO para <strong>posicionamiento en buscadores</strong>.</li>
           <li>Trabajar las <strong>herramientas para webmasters</strong> de Google y Bing.</li>
           <li>Usabilidad en <strong>móviles + Tiempo de descarga y consumo de datos</strong>.</li>
           <li>Integración de <strong>RRSS</strong>.</li>
           <li>Integración de un <strong>Blog</strong>.</li>
           <li>Que esté basado en <strong>Analytics</strong> (advertencia de cookies) y permita test A/B.</li>
           <li>El optimizar la <strong>experiencia del usuario</strong>.</li>
           <li><strong>Adaptativo (%) y Responsive (@media)</strong>.</li>
           <li>HTML5: Compromiso en el <strong>correcto marcado semántico de los contenidos</strong>.</li>
           <li>CSS3: Utilizar estilos <strong>CSS en lugar de scripts js</strong>.</li>
           <li>Pensar el la futura <strong>integración del diseño en campañas de emails y landing pages</strong>.</li>
           <li>Intentar llevar el peso de la programación al navegador en local con <strong>frameworks de js</strong> como AngularJS o React en lugar de programación en el servidor.</li>
           <li>Menos es Más.</li>
           <li>Disponer de imágenes de mucha calidad.</li>
       </ul>
       
       <p>Dos estandares en el diseño web moderno son:</p>
       <ul>
           <li>Una valor de referencia para la anchura en píxeles de una web de 960px. <a href="http://960.gs/">960 Grid System</a>.</li>
           <li>Un diseño basado en 12 columnas. Como en los frameworks Bootstrap, Fundation o Skeleton.</li>
       </ul>
       
       <p>El uso o abuso de Boostrap para el diseño web ha creado un estilo o patrón de diseño web y de navegación muy repetido en todas las webs.</p>
       
       <p>Muchas de las plantillas web, principalmente de pago, padecen de un abuso en referencias a archivos css y javascript que penalizan la velocidad de las mismas.</p>
       
       <p>Wordpress presume de ser la solución más extendida en Internet para albergar sitios web. Está desarrollado en Php. La casi totalidad de los LMs están escritos en Php y suelen proporcionar una interfaz de formularios para su configuración.</p>
       
       <p>Tendencias en el desarrollo web:</p>
       
       <ul>
           <li>Angular y React (de Facebook) son single-page application (SPA) que embeben porciones de código que pueden reponder a funcionalidades o las secciones del menú dentro de una página principal. Lo que obliga a contemplar un factor más a la hora de diseñar y codificar el marcado HTML. Netflix está desarrollado con React.</li>
           <li>Nodejs que codifica el marcado en Jade.</li>
           <li>Nodejs, Angular y React son ejemplos de la velocidad exponencial del actual escenario de desarrollo web donde antes de ser capaces de comprender, aprender y adquirir experiencia en una tecnología, esta ya está desfasada por otra mucho mejor.</li>
           <li>Google Materia Design lleva la estandarización y normativa de los ingenieros de Google a la creatividad inalcanzable del diseño. Proporciona muchísima información acerca de tamaños y valores de medidas para móviles y tablets.</li>
           <li>Gulp y Grunt, Harpjs, Prepros y Koala son herramientas de compilación y tareas como concatenación, minificación y optimización que se deben de mantener corriendo mientras trabajamos codificando el HTML.</li>
           <li>Amazon AWS y Azure como hostings por las numerosas funcionaliades que aportan.</li>
           <li>GitHub, Bitbucket o Visual Studio Online como repositorios y para la gestión de versiones del codigo.</li>
           <li>Editores HTML: Brackets, o en su defecto Sublime Text y On line: CodePen</li>
           <li>Uso de CDNs</li>
       </ul>
       
       <p><strong>Los Gestores de Versiones</strong> como GitHub, Bitbucket y Visual Studio Online gestionan automaticamente en un repositorio las modificaciones que se realizan sobre un proyecto. Los gestores de versiones guardan versiones, instantaneas, del conjunto del proyecto en un momento concreto. A diferencia de los gestores documentales que guardan un histórico de versiones de cada archivo y no así de una instantanea del conjunto de todo el repositorio.</p>
       
       <p>Un <strong>CDN es una red de entrega de contenidos</strong> (CDN, content delivery network en inglés) es una red superpuesta de computadoras que contienen copias de datos, colocados en varios puntos de una red con el fin de maximizar el ancho de banda para el acceso a los datos de clientes por la red. Un cliente accede a una copia de la información cerca del cliente, en contraposición a todos los clientes que acceden al mismo servidor central, a fin de evitar embudos cerca de ese servidor.</p>
       
    </div>

<!-- End of Caregory Info -->
  
     
        
           
              
                 
                    
                       
                             
     
     
     
     

                                               
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="navegadores">Navegadores
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">Navegadores como herramientas de desarrollo.</h4>
        <p>Utilizar las herramientas de desarrollo de los navegadores.</p>
        <p>Nunca fiarse del aspecto que tendrá la página en un movil basándose en redimensionar la ventana o mostrar la vista de dispositivo movil. Es una ayuda. Por ejemplo no reproducen fielmente el hover, scrolss y teclados emergentes para rellenar formularios.</p>
        <p>No olvidarse de comprobar el aspecto en vertical u horizontal para cada dispositivo.</p>
        
        <p>Muy importante en los navegadores:</p>
        
        <ul>
            <li>Presentan un margen superior e izquierdo.</li>
            <li>La fuente es Times New Roman</li>
            <li>El tamaño de la fuente es de 16px.</li>
            <li>Hay pantallas táctiles.</li>
            <li>Hay pantallas como Retina con doble densidad de píxeles.</li>
            <li>Hay dispositivos que permiten la multitarea dividiendo la pantalla en dos.</li>
        </ul>
        
        <p>Muy importante en los dispositivos móviles:</p>
        
        <ul>
           <li>Representan el mayor % de acceso a Internet.</li>
            <li>No suelen presentar la página web en una ventana. la web ocupa toda la pantalla.</li>
            <li>No tiene hover.</li>
            <li>Al rellenar un campo el teclado aculta gran parte de la ventana.</li>
            <li>Por defecto escala el contenido para que entre dentro de la ventana del navegador.</li>
            <li>La etiqueta meta viewport simula un tamaño de píxeles para la pantalla de aporoximadamentes 300px x 400px.</li>
            <li>La velocidad de carga es muy importante.</li>
            <li>El peso en Mb de la página afecta al consumo de la tarifa de datos.</li>
            <li>No olvidar que un smartphone es un teléfono, tiene whatsapp, tiene youtube, mapas, GPS</li>
            <li>Hay dispositivos que permiten la multitarea dividiendo la pantalla en dos.</li>
        </ul>
        
        
    </div>

<!-- End of Caregory Info -->
     
     
     
     
     
     

                                               
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="marcado-html">Marcado HTML
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">Marcan el contenido y aplican una característica a dicho contenido.</h4>
       
        <p>El desarrollo web no presenta complejidad ni dificultad en su comprensión, pero si que requiere de un amplio conocimiento cognitivo de varias materias muy atomizada de las que además hay que disponer, como para casi todo, de la habilidad y experiencia para su dominio.</p>
        
        <p>El lenguaje de marcado de páginas web es el HTML.</p>
      
       <p>Todas las etiquetas ocupan en el navegador un espacio rectángular, que se conoce como modelo de cajas.</p>
               
        <p>Es y debe ser el marcado semántico del contenido de una página web.</p>
        
        <p>En una página web nos encontramos principalmente texto e imágenes.</p> 
      
       <p>El texto debe de estar marcado por etiquetas que semánticamente definan el contenido.</p>
       
       <p>Los encabezados h (importantes en posicionamiento) y párrafos p son las etiquetas más abundantes. Ambas son etiquetas en bloque.</p>
       
       <p>Las imágenes que aporten información al contenido deben de ir marcadas por la etiqueta img con la descripción significativa en el atributo alt. Y las imágenes decorativas que no aportan información pueden colocarse como imagen de fondo (background) de una etiqueta estructural.</p>
       
       <p>la etiqueta img ¡es una etiqueta en línea!</p>
       
        <p>Cuando se desarrolló el lenguaje HTML, este código se escribía en monitores de tamaño de pantalla pequeña, menores a 800px x 600px, por lo que se establecieron unas reglas en su redación para facilitar en estas pequeñas ventanas una mejor visualización. Estas reglas por compatibilidad con lo ya escrito se mantinen y mantendrán en el HTML.</p>
        
        <p>Cuando se escribe texto <strong></strong>dentro de una etiqueta</strong>, ya sea una etiqueta p o h:</p>
        <ul>
            <li>Un espacio mostrá en el navegador un espacio.</li>
            <li>Si se introducen más espacios únicamente se mostrá uno.</li>
            <li>Para introducir más espacios se debe de utlizar Non-breaking space (No rompas el espacio).</li>
            <li>Nunca se debe de utilizar Non-breaking space para maquetar.</li>
            <li>Un retorno de carro (un intro) no mostrá un retorno de carro en el navegador.</li>
            <li>Se debe de utilizar la etiqueta br para forzar un retorno de carro.</li>
            <li>¡Pero un intro si introduce un espacio en la visualización en el navegador!</li>
        </ul>
        
        <p>En etiquetas en línea consecutivas como span:</p>
        <ul>
            <li>¡Un intro introduce un espacio en la visualización en el navegador entre las etiquetas!</li>
        </ul>
        
        <p>La etiqueta img es una etiqueta en línea:</p>
        <ul>
            <li>¡Un intro introduce un espacio en la visualización en el navegador entre las etiquetas!</li>
            <li>Las etiquetas en línea apoyan la fuente sobre una línea de base para reservar en la parte inferior de esa línea un espacio para la cola, bucle y asta de los caracteres. La etiqueta img es es línea por lo que para una correcta alineación con otro elementos en linea también se apoya sobre esa línea base, asi que n muesta un espacio entre esa lína base y el borde inferior de la caja que la contiene.</li>
        </ul>
    </div>

<!-- End of Caregory Info -->
     
     
         

      
      
      
      
      
       
       
       
     
     
     
     

                                               
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="html5">HTML5
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">Marcar semánticamente el contenido.</h4>
        <p>HTML5 presenta un nuevo escenario que intenta imponer una mayor <strong>disciplina y compromiso</strong> en el maquetador web para que utilice las etiquetas correctas en cada momento para marcar semánticamente el contenido que encierran, y que además en este sentido utilice las nuevas etiquetas de HTML5 que definen con mayor claridad su contenido y estandarizan una definición de contenido que permitirá a navegadores o dispositivos que muestren contenido web reconocer partes del contenido y actuar ante él. Por otro lado HTML5 busca depender solo de la capacidad del navegador para mostrar video, sonido, gráficos y animaciones sin depender de terceros. Que sea la propia tecnología del navegador (dentro de un estándar) la que aporte la funcionalidad.</p>
        <p>HTML5 no es una evolución del XHTML, por ese motivo ya no tenemos las reglas estrictas de sintaxis del XHTML.</p>
    </div>

<!-- End of Caregory Info -->
     
     
     
     
     
     

                                               
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="html-head-body">Elementos html, head y body
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">No son obligatorios.</h4>
        <p><strong>No es obligatorio</strong> incluir las etiquetas <strong>html, head y body</strong>.</p>
    </div>

<!-- End of Caregory Info -->
     
     
     
     
     
     
     
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="mayusculas-y-minusculas">Mayúsculas y minúsculas
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">En sintaxis y atributos.</h4>
        <p>En HTML5 <strong>se acepta las mayúsculas y las minúsculas en la sintaxis y en las propiedades y valores de los atributos</strong>:</p>
    </div>

<!-- End of Caregory Info -->
        
<!-- Simple Highlight -->
    <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;SCRIPT SRC="miScript.js"&gt;
&lt;script src="MIscript.js"&gt;
&lt;ScRiPt SrC="MiScript.js"&gt; 
</code></pre> </div>
<!-- End of Simple Highlight -->
                            
                            
                            
                            
                            
                            
                            
                            
								
 <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="comillas">Comillas
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description">Uso de comillas en los valores de los atributos de las etiquetas.</h4>
        <p>Podemos utilizar las tres sintaxis siguientes:</p>
    </div>
 <!-- End of Caregory Info -->
        
<!-- Simple Highlight -->
    <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;meta charset="utf-8"&gt;
&lt;meta charset='utf-8'&gt;
&lt;meta charset=utf-8&gt;
</code></pre> </div>
    <!-- End of Simple Highlight -->
    <p>Es <strong>válida</strong> la sintaxis con <strong>comillas dobles, comillas simples y sin comillas</strong>.</p>
    <p><strong>Si un atributo tiene varios valores</strong>, será obligatorio el uso de <strong>comillas dobles</strong>:</p>	
    <!-- Simple Highlight -->
    <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;div class="estilo1 estilo2"&gt;
</code></pre> </div>
<!-- End of Simple Highlight -->
                        
                        
                        
                        
                        
                        
                        
<!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="apertura">Elementos con una única etiqueta de apertura
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="No-es-necesario-indicar-cierre">No es necesario indicar cierre.</h4>
        <p>Con los elementos img, br, etc en HTML5 no es necesitan indicar el cierre de las etiquetas:</p>
    </div>

<!-- End of Caregory Info -->
        
<!-- Simple Highlight -->
    <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;br&gt;
&lt;img src="imagen.jpg"&gt;
</code></pre> </div>
<!-- End of Simple Highlight -->
                        
            
<!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h4 class="category-description" id="Los-elementos-con-etiquetas-de-cierre-facultativa">Los elementos con etiquetas de cierre facultativa.</h4>
         <p>No es necesario incluir el cierre en ciertas etiquetas como &lt;p&gt;, sería válido:</p>
    </div>
<!-- End of Caregory Info -->
    
     
       
        
<!-- Simple Highlight -->
    <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;p&gt;Mi párrafo sin etiqueta de cierre
</code></pre> </div>
<!-- End of Simple Highlight -->
     
     
     
     

     
     

                                               
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="atributos-boleanos">Atributos boleanos
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">En HTML5 la simple presencia del atributo es suficiente.</h4>
        <p>Así frente a:</p>
    </div>

<!-- End of Caregory Info -->
        
<!-- Simple Highlight -->
    <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;input type="checkbox" checked="checked" name="checkbox"&gt;
</code></pre> </div>

<p>Ahora es válido:</p>
   
    <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;input type="checkbox" checked name="checkbox"&gt;
</code></pre> </div>

<!-- End of Simple Highlight -->
     
     
     
     
     
     

                                               
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="sintaxis-recomendada">Sintaxis recomendada
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">Respetar XHTML.</h4>
        <p>Aunque, como se ha visto, HTML5 difiere de la sintaxis más restrictiva de XHTML, yo recomiendo que se respete la sintaxis XHTML:</p>
        <ul>
            <li>usar siempre comillas y mejor dobles</li>
            <li>cerrar todas las etiquetas</li>
            <li>usar solamente minúsculas</li>
            <li>incluir siempre el esqueleto del documento html, head y body</li>
            <li>los atributos booleaos indicarlos con la presencia del atributo únicamente</li>
            <li>para aumentar la legibilidad sangrar el código</li>
        </ul>
    </div>

<!-- End of Caregory Info -->
     
     
     
     
     
     

                                               
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="etiquetas-de-estructura-de-un-documento-HTML5">Etiquetas de estructura de un documento HTML5
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        
        <h4 class="category-description" id="doctype-html">&lt;!DOCTYPE html&gt;</h4>
        <p>Es la definición del tipo de documento para HTML5 y:</p>
        <ul>
            <li>debe de ser la primera línea</li>
            <li>no debe de haber espacios en blanco antes de ella</li>
        </ul>
        

        
        <h4 class="category-description" id="html">&lt;html&gt;</h4>
        <p><strong>Elemento raiz</strong> de un documento HTML.</p>
        <p>El atributo <code>lang</code> define el idioma que se utiliza para el contenido del documento.</p>
   
       <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;html lang="es"&gt;
</code></pre> </div>
        
        <h4 class="category-description" id="head">&lt;head&gt;</h4>
        <p><strong>Cabecera</strong>. Contiene información sobre el documento que no se mostrará en la ventana del navegador.</p>
        
        <h4 class="category-description" id="body">&lt;body&gt;</h4>
        <p><strong>Cuerpo</strong>. Contiene la parte visible que se mostrará en la ventana del navegador.</p>
        
        <h4 class="category-description" id="meta">&lt;meta&gt;</h4>
        <p><strong>Metadatos</strong>. Las etiquetas meta se situan en el head.</p>
   
       <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;meta charset="UTF-8"&gt;
&lt;meta name="keywords" content="HTML, CSS"&gt;
&lt;meta name="description" content="Lenguaje de marcado semántico HTML5"&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;  
&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;&lt;!-- Al utilizar 
el doctype de HTML5, la página ya se mostrará automáticamente en el 
modo de compatibilidad de Internet Explorer IE=edge. --&gt;  
</code></pre> </div>
        
        
    </div>

<!-- End of Caregory Info -->
     
     
     
     
     
     
     
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="la-etiqueta-meta-viewport">La etiqueta meta viewport
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        
        <h4 class="category-description" id="tamaño-de-las-pantallas-de-los-móviles">Tamaño de las pantallas de los móviles</h4>
        <p>Las pantallas de los dispositivos móviles, smartphones y tabletas tiene la particularidad de no tener ventana para las aplicaciones. No tenemos una ventana de navegador.</p>
        <p>Para acceder al ancho "físico", real, de las pantallas, está la propiedad <code>width</code>.</p>
        <p>En el sitio <a href="http://screensiz.es/phone">screensiz</a> podemos consultar las dimensiones de pantalla de algunos smartphones.</p>
        <p>La propiedad <code>device-width</code> da acceso al ancho en píxeles que "piensan tener" los smartphones. Ponemos "piensan tener" entre comillas ya que los smartphones que tienen pantallas de alta resolución, como las pantallas Retina de Apple, utilizan valores distintos.</p>
        <p>Por ejemplo para los iPhone 5 de pantalla Retina que tienen un ancho <code>width</code> de 640 px y ancho <code>device-width</code> de 320 px.</p>
        

        
        <h4 class="category-description" id="el-concepto-viewport">El concepto viewport</h4>
        <p>Apple cuando saco el iPhone y su navegador Safari Mobile, introdujo una noción de visualización particular: al abrir una página con Safari Mobile está aparece con 980 px de ancho y un zoom para adaptarse al ancho que supuestamente está disponible <code>device-width</code>, a saber 320 px. <br>Como consecuencia directa de esto el sitio aparece en miniatura.</p>
        <p>Para evitar este efecto desagradable Apple propuso el atributo <code>viewport</code> dentro de la etiqueta meta, que actualmente se ha convertido en un estándar.</p>
        <p>La norma es que las dimensiones del viewport sean más pequeñas que las dimensiones reales de la pantalla del dispositivo.</p>
        <p>El viewport permite configurar cómo va a interpretar el navegador las dimensiones de la página correspondiente.</p>
        

        
        <h4 class="category-description" id="sintaxis-y-propiedades">Sintaxis y propiedades</h4>
        <p>El <strong>viewport</strong> se declara en la cabecera del documento:</p>
   
       <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;meta name=" viewport " content="propiedades"&gt;
</div>
        
        <p>Las propiedades:</p>
        <ul>
            <li><strong>width</strong>: define el ancho que tomará la página del dispositivo. Se puede expresar en px o usar <code>device-width</code> para tomar como anchura la del propio dispositivo.</li>
            <li><strong>height</strong>: definela altura.</li>
            <li><strong>initial-scale</strong>: indica la escala inicial a la que se mostrará la página. Su valor puede ser un número real desde 0.1 en adelante. Un valor de 1 indicará que la web no sufre ningún escalado, se muestra al 100% de su tamaño.</li>
            <li><strong>minimum-scale</strong> y <strong>maximum-scale</strong>: define los valores máximo y mínimo de escala que se permiten. Será un número real que irá de 0.1 en adelante.</li>
            <li><strong>user-scalable</strong>: define el permiso para hacer o no zoom y escalar el contenido. Acepta los valores yes/no.</li>
        </ul>
        
        <p>una posible declaración puede ser:</p>
   
       <div class="code-highlight " data-label="">
        <span class="js-copy-to-clipboard copy-code">copy</span> <pre><code class="language-markup js-code">
&lt;meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"&gt;  
</div>
        

        
        <h4 class="category-description" id="shrink-to-fit">shrink-to-fit=no</h4>
        <p>Hoy en día, la mayoría de los elementos se diseñan con dimensiones responsivas. Esto significa usar porcentajes y unidades de viewport, en lugar de píxeles simples. Sin embargo, hay algunas circunstancias en las que se incluye un elemento de ancho fijo. Y, el ancho del elemento no es necesariamente más pequeño que el ancho de la ventana gráfica. Por ejemplo, una div de 800px en un iPhone.</p>
        
        <p>Normalmente, el comportamiento que esperamos es que habrá un desbordamiento, y se introducirá una barra de desplazamiento para permitir al usuario ver el resto del ancho del contenido. Sin embargo desde iOS Safari 9.0, cuando Safari está en el nuevo modo de vista dividida (es decir, cuando hay varias aplicaciones abiertas una al lado de otra en la pantalla), esto no sucede.</p>
        
        <p>Lo que sucede en su lugar es que Safari manipula el viewport para que sea igual al ancho del elemento desbordante, p. 800px, por lo que se ajusta en su totalidaden a la pantalla. El efecto de esto es que el resto de la página se "encoge para ajustarse" al elemento más grande.</p>
        
        <p>También podemos ver que cuando el elemento de anchura fija no es mayor que la ventana de visualización, todo es normal.</p>
        
        <p>Según los desarrolladores que trabajan en WebKit, la razón de esto es porque, sobre la base de sus datos, la mayoría de los sitios web hacen un mal uso de la etiqueta meta viewport.</p>
        
        <p>En lugar de utilizar el valor estándar de width = device-width, inicial-scale = 1, tenian tamaños de visor de codificación fija o les faltaban por completo. Por lo tanto, debido a la introducción de Split View, una gran cantidad de sitios web no estaban preparados.</p>
        
        <p>La respuesta de Apple a este problema era, de forma predeterminada, reducir todo el contenido desbordante de la página para ajustarse al ancho de la ventana de visualización del navegador. Para los sitios Web que responden de manera responsable, podemos agregar el nuevo valor meta de la ventana de visualización, <strong>shrink-to-fit = no</strong>, para señalar esto a Safari y deshabilitar esta característica predeterminada.</p>
       
        
        
</div>

<!-- End of Caregory Info -->

      
                                                 
     <!-- Category Info -->
    <div class="category-info helper pt0" id="simple-highlight">
        <h3 class="category-title" id="elementos-de-bloque-y-en-linea">Elementos de bloque y en línea
            <!-- Fragment Identifier -->
            <a class="fragment-identifier js-fragment-identifier fragment-identifier-scroll" href="#simple-highlight">
                <i class="fa fa-link"></i>
            </a>
            <!-- End of Fragment Identifier -->
        </h3>
        <h4 class="category-description" id="">Modelo de cajas del HTML.</h4><p>Los elementos de <strong>bloque</strong>:</p>
        <ul>
            <li><strong>Ocupan todo el espacio disponible en horizontal</strong> hasta el final del espacio disponible.</li>
            <li><strong>Se sitúan:</strong>            
                <ul>
                <li><strong>Empiezan en una nueva línea</strong>.</li>
                <li><strong>Fuerza un retorno de carro al final</strong>.</li>
                </ul>
            
            </li>
        </ul>
        
        <p>Los elementos en <strong>línea</strong>:</p>
        <ul>
            <li>Ocupan <strong>solo el espacio necesario para mostrar su contenido</strong>.</li>
            <li><strong>Se sitúan:</strong>
            
                <ul>
                <li><strong>a continuación del elemento anterior</strong>.</li>
                </ul>
            
            </li>
        </ul>
        
        <p>Por sus características, <strong>los elementos de bloque</strong> no pueden (no deben) insertarse dentro de elementos en línea y <strong>solo pueden aparecer dentro de otros elementos de bloque</strong>. En cambio, un <strong>elemento en línea puede aparecer tanto dentro de un elemento de bloque como dentro de otro elemento en línea</strong>.</p>
        
        <hp><strong>Elementos en línea</strong></hp>
        <p>a, abbr, br, cite, code, data, dfn, em, q, span, sub, sup, time, mark, meter, details, summary, wbr, bdo, progress.</p>
        
        <hp><strong>Elementos en bloque</strong></hp>
        <p>div, header, nav, section, article, aside, footer, main, H1...h6, address, blockquote, pre, ol, ul, li, dl, dt, dd, form, fieldset, hr, noscript, table, thead, tfoot, th, tr, td.</p>
        
        
    </div>
<!-- End of Caregory Info -->   
     
     
     
     
     

     
     
     
     

                                               


            
       
        </div></div></div></div>